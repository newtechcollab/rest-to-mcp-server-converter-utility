openapi: 3.0.1
info:
  title: Core Platform API - Product
  description: Core platform service to support product data.
  contact:
    name: Ulta Beauty
    url: https://www.ulta.com
    email: tbd@ulta.com
  version: "1.0"
servers:
- url: "https://da1.ulta.com/v1"
  variables:
    env:
      default: da1.ulta.com
      enum:
      - da1.ulta.com
      - qa1.ulta.com
tags:
- name: Product
  description: Fetch product details from CommerceTools
  externalDocs:
    description: More @
    url: https://confluence.ulta.com/display/DSOTF/Product+Details+Page
- name: SKU
  description: Fetch SKU details from CommerceTools
  externalDocs:
    description: More @
    url: https://confluence.ulta.com/display/DSOTF/Product+Details+Page
- name: Brands
  description: Fetch brand details from CommerceTools
  externalDocs:
    description: More @
    url: https://confluence.ulta.com/display/DSOTF/Product+Details+Page
- name: Product Collection
  description: Fetch Collection of Product details from CommerceTools
  externalDocs:
    description: More @
    url: https://confluence.ulta.com/display/DSOTF/Product+Details+Page
paths:
  /core/catalog/product/{productId}/sku/{skuId}:
    get:
      tags:
      - SKU
      summary: Retrieves the current snapshot of the SKU indicated by ID provided
        as input.
      description: The service assembles all the information necessary to serve a
        SKU to end customer.
      operationId: getProductByProductAndSkuId
      parameters:
      - $ref: "#/components/parameters/country"
      - $ref: "#/components/parameters/locale"
      - name: productId
        in: path
        description: This is the 'productId' in CT.
        required: true
        schema:
          type: string
      - name: skuId
        in: path
        description: ' This is the ID for SKUs in CT'
        required: true
        schema:
          type: string
      - name: previewDate
        in: query
        description: The Preview Date Time.
        required: false
        schema:
          type: string
        example: 2021-06-03T05:56:47.817889Z
      - name: saleSubscribePrices
        in: query
        description: Set saleSubscribePrices value - true/false
        required: false
        schema:
          type: boolean
      - name: X-ULTA-MARKET-PLACE-ENABLED
        in: header
        description: Set marketplace enabled header value - true/false
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UltaProductResponse"
              examples:
                ValidSKUResponse:
                  $ref: components/examples/valid-responses.yaml#/components/examples/ValidProductResponse
                ValidSkuResponseWithSubscription:
                  $ref: components/examples/valid-responses.yaml#/components/examples/ValidProductResponseWithSubscription
                Country-Not-Supported-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
                InvalidSKUResponse-ProductNotFound:
                  $ref: components/examples/sku-errors.yaml#/components/examples/InvalidSKUResponse-ProductNotFound
                InvalidSKUResponse-SKUNotFound:
                  $ref: components/examples/sku-errors.yaml#/components/examples/InvalidSKUResponse-SKUNotFound
                InvalidSKUResponse-ProductIDInvalid:
                  $ref: components/examples/sku-errors.yaml#/components/examples/InvalidSKUResponse-ProductIDInvalid
                InvalidSKUResponse-SkuIDInvalid:
                  $ref: components/examples/sku-errors.yaml#/components/examples/InvalidSKUResponse-SkuIDInvalid
                InvalidSKUResponse-SkuIDEmpty:
                  $ref: components/examples/sku-errors.yaml#/components/examples/InvalidSKUResponse-SkuIDEmpty
                InvalidSKUResponse-SkuMaxQtyNegative:
                  $ref: components/examples/sku-errors.yaml#/components/examples/InvalidSKUResponse-SkuMaxQtyNegative
                Country-Parameter-Missing-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
                InvalidPreviewDate:
                  $ref: components/examples/product-errors.yaml#/components/examples/InvalidPreviewDate
  /core/catalog/product/{productId}:
    get:
      tags:
      - Product
      summary: Retrieves the current snapshot of the product indicated by ID provided
        as input.
      description: This is a core platform service that serves product data as a building
        block.
      operationId: getProductById
      parameters:
      - $ref: "#/components/parameters/country"
      - $ref: "#/components/parameters/locale"
      - name: productId
        in: path
        description: This is the 'productId' in CT.
        required: true
        schema:
          type: string
      - name: expandedSku
        in: query
        description: SKU id of the product's variant. Indicates this sku will be set
          as default sku of this query.
        required: false
        schema:
          type: string
      - name: previewDate
        in: query
        description: The Preview Date Time.
        required: false
        schema:
          type: string
        example: 2021-06-03T05:56:47.817889Z
      - name: saleSubscribePrices
        in: query
        description: Set saleSubscribePrices value - true/false
        required: false
        schema:
          type: boolean
      - name: X-ULTA-MARKET-PLACE-ENABLED
        in: header
        description: Set marketplace enabled header value - true/false
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UltaProductResponse"
              examples:
                ValidProduct:
                  $ref: components/examples/valid-responses.yaml#/components/examples/ValidProductResponse
                ValidProductResponseWithSubscription:
                  $ref: components/examples/valid-responses.yaml#/components/examples/ValidProductResponseWithSubscription
                Country-Parameter-Missing-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
                Country-Not-Supported-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
                ValidProductWithExpandedSku:
                  $ref: components/examples/valid-responses-expanded-sku.yaml#/components/examples/ValidExpandedSkuResponse
                InvalidProductRequest-ProductIDMissing:
                  $ref: components/examples/product-errors.yaml#/components/examples/InvalidProductRequest-ProductIDMissing
                InvalidProductRequest-ProductIDInvalid:
                  $ref: components/examples/product-errors.yaml#/components/examples/InvalidProductRequest-ProductIDInvalid
                InvalidProductResponse-ProductNotFound:
                  $ref: components/examples/product-errors.yaml#/components/examples/InvalidProductResponse-ProductNotFound
                InvalidProductResponse-ProductLookupFailed:
                  $ref: components/examples/product-errors.yaml#/components/examples/InvalidProductResponse-ProductLookupFailed
                InvalidProductResponse-ProductNameMissing:
                  $ref: components/examples/product-errors.yaml#/components/examples/InvalidProductResponse-ProductNameMissing
                InvalidProductResponse-SKUsMissing:
                  $ref: components/examples/product-sku-errors.yaml#/components/examples/InvalidProductResponse-SKUsMissing
                InvalidProductResponse-DefaultSkuIdMissing:
                  $ref: components/examples/product-sku-errors.yaml#/components/examples/InvalidProductResponse-DefaultSkuIdMissing
                InvalidProductResponse-DefaultSkuIdInvalid:
                  $ref: components/examples/product-sku-errors.yaml#/components/examples/InvalidProductResponse-DefaultSkuIdInvalid
                InvalidProductResponse-SkuNameMissing:
                  $ref: components/examples/product-sku-errors.yaml#/components/examples/InvalidProductResponse-SkuNameMissing
                InvalidProductResponse-SkuTypeMissing:
                  $ref: components/examples/product-sku-errors.yaml#/components/examples/InvalidProductResponse-SkuTypeMissing
                InvalidProductResponse-SkuImagesMissing:
                  $ref: components/examples/product-sku-errors.yaml#/components/examples/InvalidProductResponse-SkuImagesMissing
                InvalidProductResponse-BrandIDInvalid:
                  $ref: components/examples/product-brand-errors.yaml#/components/examples/InvalidProductResponse-BrandIDInvalid
                InvalidProductResponse-BrandIDMissing:
                  $ref: components/examples/product-brand-errors.yaml#/components/examples/InvalidProductResponse-BrandIDMissing
                InvalidProductResponse-BrandNameMissing:
                  $ref: components/examples/product-brand-errors.yaml#/components/examples/InvalidProductResponse-BrandNameMissing
                InvalidProductResponse-BrandLocationInvalid:
                  $ref: components/examples/product-brand-errors.yaml#/components/examples/InvalidProductResponse-BrandLocationInvalid
                InvalidProductResponse-BrandError:
                  $ref: components/examples/product-brand-errors.yaml#/components/examples/InvalidProductResponse-BrandError
                InvalidProductResponse-SkuMainImageMissing:
                  $ref: components/examples/product-sku-image-errors.yaml#/components/examples/InvalidProductResponse-SkuMainImageMissing
                InvalidProductResponse-SkuMainImageURLInvalid:
                  $ref: components/examples/product-sku-image-errors.yaml#/components/examples/InvalidProductResponse-SkuMainImageURLInvalid
                InvalidProductResponse-SkuMainImageURLMissing:
                  $ref: components/examples/product-sku-image-errors.yaml#/components/examples/InvalidProductResponse-SkuMainImageURLMissing
                InvalidProductResponse-SkuMainImageTypeMissing:
                  $ref: components/examples/product-sku-image-errors.yaml#/components/examples/InvalidProductResponse-SkuMainImageTypeMissing
                InvalidProductResponse-SkuOriginalPriceMissing:
                  $ref: components/examples/product-sku-price-errors.yaml#/components/examples/InvalidProductResponse-SkuOriginalPriceMissing
                InvalidProductResponse-SkuCurrencyCodeMissing:
                  $ref: components/examples/product-sku-price-errors.yaml#/components/examples/InvalidProductResponse-SkuCurrencyCodeMissing
                InvalidProductResponse-SkuListPriceNegative:
                  $ref: components/examples/product-sku-price-errors.yaml#/components/examples/InvalidProductResponse-SkuListPriceNegative
                InvalidPreviewDate:
                  $ref: components/examples/product-errors.yaml#/components/examples/InvalidPreviewDate
  /core/catalog/product/collection:
    get:
      tags:
      - Product Collection
      summary: ' Retrieves all the requested product information .'
      description: This is the core service to fetch the product information in collection
        with configurable limit of 25 products and skus information per request.
      operationId: getProductCollectionByIds
      parameters:
      - $ref: "#/components/parameters/country"
      - $ref: "#/components/parameters/locale"
      - name: itemIds
        in: query
        description: Combination of productId and sku id with colon as delimiter to
          identify the values.
        required: false
        schema:
          type: array
          items:
            type: string
      - name: skuIds
        in: query
        description: Array of sku ids
        required: false
        schema:
          type: array
          items:
            type: string
      - name: previewDate
        in: query
        description: The Preview Date Time.
        required: false
        schema:
          type: string
        example: 2021-06-03T05:56:47.817889Z
      - name: saleSubscribePrices
        in: query
        description: Set saleSubscribePrices value - true/false
        required: false
        schema:
          type: boolean
      - name: X-ULTA-MARKET-PLACE-ENABLED
        in: header
        description: Set marketplace enabled header value - true/false
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UltaProductCollectionResponse"
              examples:
                AllValidProductCollectionResponse:
                  $ref: components/examples/product-collection-response.yaml#/components/examples/AllValidProductCollectionResponse
                AtleastOneValidProductCollectionResponse:
                  $ref: components/examples/product-collection-response.yaml#/components/examples/AtleastOneValidProductCollectionResponse
                AllInvalidProductCollectionFailedResponse:
                  $ref: components/examples/product-collection-response.yaml#/components/examples/AllInvalidProductCollectionFailedResponse
                RequestParametersExceededResponse:
                  $ref: components/examples/product-collection-response.yaml#/components/examples/RequestParametersExceededResponse
                Country-Parameter-Missing-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
                RequestParametersMissingResponse:
                  $ref: components/examples/product-collection-response.yaml#/components/examples/RequestParametersMissingResponse
                InvalidPreviewDate:
                  $ref: components/examples/product-errors.yaml#/components/examples/InvalidPreviewDate
  /core/catalog/brands/{brandId}:
    get:
      tags:
      - Brands
      summary: Retrieves one single brand information.
      description: This is the core service to fetch one single brand information
        details.
      operationId: getBrand
      parameters:
      - $ref: "#/components/parameters/country"
      - $ref: "#/components/parameters/locale"
      - name: brandId
        in: path
        description: Brand ID in CT
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UltaBrandResponse"
              examples:
                HappyPath:
                  $ref: components/examples/valid-responses.yaml#/components/examples/HappyPath-GetBrand
                BrandId-Invalid:
                  $ref: components/examples/brand-errors.yaml#/components/examples/BrandId-Invalid
                BrandNotFound:
                  $ref: components/examples/brand-errors.yaml#/components/examples/BrandNotFound
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UltaBrandResponse"
              examples:
                Country-Parameter-Missing-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
                Country-Not-Supported-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
  /core/catalog/brands:
    get:
      tags:
      - Brands
      summary: Retrieves all live brands information.
      description: This is the core service to fetch all the live brands information
        details.
      operationId: getAllBrands
      parameters:
      - $ref: "#/components/parameters/country"
      - $ref: "#/components/parameters/locale"
      - name: previewDate
        in: query
        description: The Preview Date Time.
        required: false
        schema:
          type: string
        example: 2021-06-03T05:56:47.817889Z
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UltaBrandResponse"
              examples:
                HappyPath:
                  $ref: components/examples/valid-responses.yaml#/components/examples/HappyPath-Brands
                InvalidPreviewDate:
                  $ref: components/examples/brand-errors.yaml#/components/examples/InvalidPreviewDate
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UltaBrandResponse"
              examples:
                Country-Parameter-Missing-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
                Country-Not-Supported-Error:
                  $ref: components/examples/valid-responses.yaml#/components/examples/Invalid-Request-Context-Error
components:
  schemas:
    UltaMessage:
      type: object
      properties:
        type:
          type: string
        code:
          type: string
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/UltaMessageToken"
    UltaMessageToken:
      type: object
      properties:
        strings:
          type: array
          items:
            $ref: "#/components/schemas/UltaMessageTokenString"
        prices:
          type: array
          items:
            $ref: "#/components/schemas/UltaMessageTokenPrice"
    UltaMessageTokenPrice:
      type: object
      properties:
        key:
          type: string
        value:
          type: array
          items:
            $ref: "#/components/schemas/UltaPrice"
    UltaMessageTokenString:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    UltaMeta:
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: string
        updatedResources:
          type: array
          items:
            $ref: "#/components/schemas/UltaUpdatedResource"
    UltaPrice:
      type: object
      properties:
        centAmount:
          type: integer
          format: int64
        currencyCode:
          type: string
    UltaProductResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/UltaMeta"
        data:
          type: object
        messages:
          type: array
          items:
            $ref: "#/components/schemas/UltaMessage"
    UltaUpdatedResource:
      type: object
      properties:
        rel:
          type: string
          enum:
          - "UltaUpdatedResourceType{type='profile'}"
          - "UltaUpdatedResourceType{type='cart'}"
          - "UltaUpdatedResourceType{type='order'}"
          - "UltaUpdatedResourceType{type='address'}"
          - "UltaUpdatedResourceType{type='saveforlater'}"
          - "UltaUpdatedResourceType{type='favorites'}"
        href:
          type: string
    UltaAsset:
      required:
      - location
      - type
      type: object
      properties:
        location:
          type: string
        type:
          type: string
          enum:
          - IMAGE
          - VIDEO
          - DOCUMENT
        description:
          type: string
    UltaBadge:
      type: object
      properties:
        type:
          type: string
          enum:
          - Coming-Soon
          - In-Store-Only
          - Online-Only
          - Exclusive
          - New-Item
          - On-Sale
          - Platinum-Perk
        description:
          type: string
    UltaBrand:
      required:
      - displayName
      - id
      - location
      type: object
      properties:
        id:
          pattern: "^[a-zA-Z0-9]+$"
          type: string
        displayName:
          type: string
        location:
          type: string
        badges:
          maxItems: 1
          minItems: 0
          type: array
          items:
            $ref: "#/components/schemas/UltaBrandBadge"
        internalName:
          type: string
        cleanIngredients:
          type: boolean
        crueltyFree:
          type: boolean
        sustainablePackaging:
          type: boolean
        vegan:
          type: boolean
        positiveImpact:
          type: boolean
    UltaBrandBadge:
      type: object
      properties:
        type:
          type: string
          enum:
          - Exclusive-Brand
          - New-Brand
        description:
          type: string
    UltaCategoryBreadcrumb:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        level:
          type: string
        seoUrl:
          type: string
    UltaChannelBadges:
      type: object
      properties:
        online:
          type: array
          items:
            $ref: "#/components/schemas/UltaBadge"
        onlineSale:
          type: array
          items:
            $ref: "#/components/schemas/UltaBadge"
        onlineApp:
          type: array
          items:
            $ref: "#/components/schemas/UltaBadge"
        onlineAppAndroid:
          type: array
          items:
            $ref: "#/components/schemas/UltaBadge"
        onlineAppIOS:
          type: array
          items:
            $ref: "#/components/schemas/UltaBadge"
    UltaCoreBrand:
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        location:
          type: string
    UltaCorePrice:
      type: object
      properties:
        centAmount:
          type: integer
          format: int64
        currencyCode:
          type: string
          enum:
          - CAD
          - USD
    UltaDimensions:
      type: object
      properties:
        size:
          $ref: "#/components/schemas/UltaSize"
    UltaPriceRange:
      type: object
      properties:
        listPriceRange:
          $ref: "#/components/schemas/UltaPriceRanges"
        salePriceRanges:
          $ref: "#/components/schemas/UltaSalePriceRanges"
    UltaPriceRanges:
      type: object
      properties:
        min:
          $ref: "#/components/schemas/UltaPrice"
        max:
          $ref: "#/components/schemas/UltaPrice"
    UltaProduct:
      required:
      - displayName
      - id
      - skus
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        brand:
          $ref: "#/components/schemas/UltaBrand"
        breadcrumbs:
          type: array
          items:
            $ref: "#/components/schemas/UltaCategoryBreadcrumb"
        skus:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/UltaSKU"
        live:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        approvalStatus:
          type: string
        priceRange:
          $ref: "#/components/schemas/UltaPriceRange"
        seoUrl:
          type: string
        variantCount:
          type: integer
          format: int32
        questionsEnabled:
          type: boolean
        questionCount:
          type: integer
          format: int32
        shadeFinderUrl:
          type: string
        metaTitle:
          type: string
        metaDescription:
          type: string
        subType:
          type: string
    UltaProductCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/UltaProduct"
    UltaProductCollectionResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/UltaMeta"
        data:
          $ref: "#/components/schemas/UltaProductCollection"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/UltaMessage"
    UltaReviewSummary:
      type: object
      properties:
        rating:
          type: number
          format: double
        reviewCount:
          type: integer
          format: int32
    UltaSKU:
      required:
      - displayName
      - id
      - images
      - type
      type: object
      properties:
        id:
          pattern: "^[a-zA-Z0-9-]+$"
          type: string
        displayName:
          type: string
        description:
          $ref: "#/components/schemas/UltaSKUDescription"
        usageInstructions:
          type: string
        ingredients:
          type: string
        couponEligible:
          type: boolean
        hazmatCode:
          type: string
          enum:
          - H
          - F
          - "N"
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        preSaleStartDate:
          type: string
          format: date-time
        preSaleEndDate:
          type: string
          format: date-time
        comingSoonStartDate:
          type: string
          format: date-time
        comingSoonEndDate:
          type: string
          format: date-time
        inStoreStartDate:
          type: string
          format: date-time
        variantName:
          type: string
        maxQuantity:
          type: integer
          format: int32
        defaultSku:
          type: boolean
        images:
          $ref: "#/components/schemas/UltaSKUImages"
        prices:
          $ref: "#/components/schemas/UltaSKUPrices"
        badges:
          $ref: "#/components/schemas/UltaChannelBadges"
        type:
          type: string
        dimensions:
          $ref: "#/components/schemas/UltaDimensions"
        weight:
          $ref: "#/components/schemas/UltaSize"
        isORMD:
          type: string
        mpDisposeInStore:
          type: string
        hazardousDisposalClassificationFED:
          type: string
        nonReturnableItem:
          type: string
        kitValue:
          $ref: "#/components/schemas/UltaPrice"
        live:
          type: boolean
        gwp:
          type: boolean
        dotComSellable:
          type: string
          enum:
          - S
          - W
          - B
        isSubscriptionEligible:
          type: boolean
        subscriptionFrequencyOptions:
          type: array
          items:
            type: string
        pricingCategory:
          type: string
        ultaTaxCategory:
          type: string
        brand:
          $ref: "#/components/schemas/UltaCoreBrand"
        abcClass:
          type: string
        shortDescription:
          type: string
        skuApprovalStatus:
          type: string
        shadeDescription:
          type: string
        index:
          type: integer
          format: int32
        reviewSummary:
          $ref: "#/components/schemas/UltaReviewSummary"
        clearance:
          type: boolean
        season:
          type: string
        findInStore:
          type: boolean
        prop65:
          type: boolean
        warnings:
          type: string
        cleanIngredients:
          type: boolean
        vegan:
          type: boolean
        crueltyFree:
          type: boolean
        positiveImpact:
          type: boolean
        sustainablePackaging:
          type: boolean
        hasCBD:
          type: boolean
        s2dEnabled:
          type: boolean
        notifyMe:
          type: boolean
        upcNumber:
          type: string
        fsaHsaEligible:
          type: boolean
        refillableItem:
          type: string
        refillableSKUs:
          type: array
          items:
            type: string
        exclusivityStartDate:
          type: string
          format: date-time
        exclusivityEndDate:
          type: string
          format: date-time
        merchBrandId:
          type: string
        merchBrandName:
          type: string
        sellerId:
          type: string
        sellerName:
          type: string
        appPreSaleStartDate:
          type: string
          format: date-time
        appPreSaleEndDate:
          type: string
          format: date-time
    UltaSKUDescription:
      type: object
      properties:
        header1:
          type: string
        header2:
          type: string
        header3:
          type: string
        description1:
          type: array
          items:
            type: string
        description2:
          type: array
          items:
            type: string
        description3:
          type: array
          items:
            type: string
    UltaSKUImages:
      required:
      - mainImage
      type: object
      properties:
        mainImage:
          $ref: "#/components/schemas/UltaAsset"
        alternateImages:
          type: array
          items:
            $ref: "#/components/schemas/UltaAsset"
        swatchImage:
          $ref: "#/components/schemas/UltaAsset"
        smooshImage:
          $ref: "#/components/schemas/UltaAsset"
        commonMediaSku:
          type: string
    UltaSKUPrices:
      required:
      - listPrice
      type: object
      properties:
        listPrice:
          $ref: "#/components/schemas/UltaPrice"
        salePrices:
          $ref: "#/components/schemas/UltaSalePrice"
        subscriptionPrices:
          $ref: "#/components/schemas/UltaSubscriptionPrice"
        promotionId:
          type: string
        promoEventType:
          type: string
    UltaSalePrice:
      type: object
      properties:
        onlineSale:
          $ref: "#/components/schemas/UltaPrice"
        online:
          $ref: "#/components/schemas/UltaPrice"
        onlineApp:
          $ref: "#/components/schemas/UltaPrice"
        onlineAppAndroid:
          $ref: "#/components/schemas/UltaPrice"
        onlineAppIOS:
          $ref: "#/components/schemas/UltaPrice"
    UltaSalePriceRanges:
      type: object
      properties:
        onlineSale:
          $ref: "#/components/schemas/UltaPriceRanges"
        online:
          $ref: "#/components/schemas/UltaPriceRanges"
        onlineApp:
          $ref: "#/components/schemas/UltaPriceRanges"
        onlineAppAndroid:
          $ref: "#/components/schemas/UltaPriceRanges"
        onlineAppIOS:
          $ref: "#/components/schemas/UltaPriceRanges"
    UltaSize:
      type: object
      properties:
        precision:
          type: string
        value:
          type: string
    UltaSubscriptionPrice:
      type: object
      properties:
        onlineSale:
          $ref: "#/components/schemas/UltaCorePrice"
        online:
          $ref: "#/components/schemas/UltaCorePrice"
        onlineApp:
          $ref: "#/components/schemas/UltaCorePrice"
        onlineAppAndroid:
          $ref: "#/components/schemas/UltaCorePrice"
        onlineAppIOS:
          $ref: "#/components/schemas/UltaCorePrice"
    UltaBrandResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/UltaMeta"
        data:
          type: object
        messages:
          type: array
          items:
            $ref: "#/components/schemas/UltaMessage"
  parameters:
    country:
      name: country
      in: query
      description: Catalog country eg. US or CA
      required: true
      style: form
      schema:
        type: string
    locale:
      name: locale
      in: query
      description: Locale eg en-US
      required: false
      style: form
      schema:
        type: string
